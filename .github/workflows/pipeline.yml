name: CI Checks

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Set Up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: ^1.23

      - name: Check Out Code Into the Go Module Directory
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: go mod download

      - name: Run Tests
        run: make test

      - name: Coverage Check
        run: make coverage

      - name: Generate Report
        run: make report

      - name: Copy Files
        run: |
          mkdir reports
          cp cover.html reports/.

      - name: Archive Reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports

  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set Up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: ^1.23

      - name: Check Out Code Into the Go Module Directory
        uses: actions/checkout@v4

      - name: Build Application
        run: make build

      - name: Copy Binary File
        run: |
          mkdir artifacts
          cp api artifacts/.

      - name: Archive Binary
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: artifacts

  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v4

      - name: Download Binary
        uses: actions/download-artifact@v4
        with:
          name: api

      - name: Configure Git User
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
        
      - name: Create Tag
        run: |
          git tag v1.0.0
          git push origin v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            api
            LICENSE
            README.md
